
> koa-boilerplate@1.0.0 lint /media/ironcadiz/cd225fb8-d597-4809-9376-f211f3684246/Documents/fbhack/QA_challenge_API/src/public/repos/15
> eslint ./src index.js "-f" "json"

[{"filePath":"/media/ironcadiz/cd225fb8-d597-4809-9376-f211f3684246/Documents/fbhack/QA_challenge_API/src/public/repos/15/src/app.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/media/ironcadiz/cd225fb8-d597-4809-9376-f211f3684246/Documents/fbhack/QA_challenge_API/src/public/repos/15/src/config/database.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/media/ironcadiz/cd225fb8-d597-4809-9376-f211f3684246/Documents/fbhack/QA_challenge_API/src/public/repos/15/src/models/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/media/ironcadiz/cd225fb8-d597-4809-9376-f211f3684246/Documents/fbhack/QA_challenge_API/src/public/repos/15/src/routes.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/media/ironcadiz/cd225fb8-d597-4809-9376-f211f3684246/Documents/fbhack/QA_challenge_API/src/public/repos/15/src/routes/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/media/ironcadiz/cd225fb8-d597-4809-9376-f211f3684246/Documents/fbhack/QA_challenge_API/src/public/repos/15/index.js","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'./src/models'` with `\"./src/models\"`","line":4,"column":20,"nodeType":null,"source":"const db = require('./src/models')","endLine":4,"endColumn":34,"fix":{"range":[84,98],"text":"\"./src/models\""}},{"ruleId":"no-unused-vars","severity":2,"message":"'asdsad' is assigned a value but never used.","line":5,"column":7,"nodeType":"Identifier","source":"const asdsad =\"asdsad\"","endLine":5,"endColumn":13},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `Â·`","line":5,"column":15,"nodeType":null,"source":"const asdsad =\"asdsad\"","endLine":5,"endColumn":15,"fix":{"range":[114,114],"text":" "}}],"errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"/* eslint no-console: \"off\" */\n\nconst app = require(\"./src/app\")\nconst db = require('./src/models')\nconst asdsad =\"asdsad\"\nconst PORT = process.env.PORT || 3000\n\ndb.sequelize\n  .authenticate()\n  .then(() => {\n    console.log(\"Connection to the database has been established successfully.\")\n    app.listen(PORT, err => {\n      if (err) {\n        return console.error(\"Failed\", err)\n      }\n      console.log(`Listening on port ${PORT}`)\n      return app\n    })\n  })\n  .catch(err => console.error(\"Unable to connect to the database:\", err))\n"}]
